let restaurant;var map;document.addEventListener("DOMContentLoaded",event=>{DBHelper.getDB()}),window.addEventListener("load",event=>{registerServiceWorker();const iframe=document.querySelector("iframe");iframe&&(iframe.title="Google Maps iframe")}),registerServiceWorker=(()=>{navigator.serviceWorker&&navigator.serviceWorker.register("/sw.js").then(function(){console.log("Service Worker registered!")}).catch(function(){console.log("Registration of the Service Worker failed")})}),requestSync=(()=>{navigator.serviceWorker.ready.then(function(swRegistration){return swRegistration.sync.register("syncReviews")}).catch(function(error){console.log(error)})}),window.initMap=(()=>{fetchRestaurantFromURL((error,restaurant)=>{error?console.error(error):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:restaurant.latlng,scrollwheel:!1,mapTypeId:"hybrid"}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))})}),fetchRestaurantFromURL=(callback=>{if(self.restaurant)return void callback(null,self.restaurant);const id=getParameterByName("id");id?DBHelper.fetchRestaurantById(id,(error,restaurant)=>{self.restaurant=restaurant,restaurant?(fillRestaurantHTML(),callback(null,restaurant)):console.error(error)}):(error="No restaurant id in URL",callback(error,null))}),fillRestaurantHTML=((restaurant=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=restaurant.name,document.getElementById("restaurant-address").innerHTML=restaurant.address;const image=document.getElementById("restaurant-img");image.className="restaurant-img",image.alt="Restaurant: "+restaurant.name,image.src=DBHelper.imageUrlForRestaurant(restaurant),image.srcset=DBHelper.imageSrcSetAttrForRestaurant(restaurant),document.getElementById("restaurant-cuisine").innerHTML=restaurant.cuisine_type,restaurant.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML(),addReviewsForm()}),fillRestaurantHoursHTML=((operatingHours=self.restaurant.operating_hours)=>{const hours=document.getElementById("restaurant-hours");for(let key in operatingHours){const row=document.createElement("tr"),day=document.createElement("td");day.innerHTML=key,row.appendChild(day);const time=document.createElement("td");time.innerHTML=operatingHours[key],row.appendChild(time),hours.appendChild(row)}}),fillReviewsHTML=((reviews=self.restaurant.reviews)=>{const container=document.getElementById("reviews-container"),title=document.createElement("h3");if(title.innerHTML="Reviews",container.appendChild(title),!reviews){const noReviews=document.createElement("p");return noReviews.innerHTML="No reviews yet!",void container.appendChild(noReviews)}const ul=document.getElementById("reviews-list");reviews.forEach(review=>{ul.appendChild(createReviewHTML(review))}),container.appendChild(ul)}),addReviewsForm=((rest_id=self.restaurant.id)=>{const container=document.getElementById("reviews-container"),form=document.createElement("form"),li=document.createElement("ul"),liName=document.createElement("li"),liRating=document.createElement("li"),liRestId=document.createElement("li"),liComments=document.createElement("li"),liSubmit=document.createElement("li"),submit=document.createElement("input");submit.type="submit",submit.value="Submit",liSubmit.appendChild(submit);const name=document.createElement("input");name.type="text",name.name="name",name.id="name-field",name.placeholder="Enter first name";const labelName=document.createElement("label");labelName.setAttribute("for",name.id),labelName.innerHTML="Name: ",liName.appendChild(labelName),liName.appendChild(document.createElement("br")),liName.appendChild(name);const restId=document.createElement("input");restId.type="text",restId.name="restaurant_id",restId.value=rest_id,liRestId.appendChild(restId),liRestId.style.display="none";const rating=document.createElement("input");rating.className="slider",rating.type="range",rating.id="id-field",rating.name="rating",rating.min="1",rating.max="5";const labelRating=document.createElement("label");labelRating.setAttribute("for",rating.id),labelRating.innerHTML="Rating: ",liRating.appendChild(labelRating),liRating.appendChild(document.createElement("br")),liRating.appendChild(rating);const comments=document.createElement("textarea");comments.name="comments",comments.placeholder="Enter your review about the restaurant here",comments.rows="15",comments.cols="30",comments.id="comments-field",comments.required=!0,comments.setAttribute("aria-required",!0);const labelComments=document.createElement("label");labelComments.setAttribute("for",comments.id),labelComments.innerHTML="Comments: ",liComments.appendChild(labelComments),liComments.appendChild(document.createElement("br")),liComments.appendChild(comments),form.onsubmit=function(ev){ev.preventDefault(),requestSync();var item={restaurant_id:parseInt(restId.value),date:(new Date).toDateString(),name:name.value,rating:rating.value,comments:comments.value};fetch(`${DBHelper.SERVER_URL}/reviews/`,{method:"post",headers:{"Content-Type":"application/json; charset=utf-8"},body:JSON.stringify(item)}).then(response=>response.json()).then(function(){addReviewsToDB(!1,function(){window.location.href=`/restaurant.html?id=${rest_id}`})}).catch(function(){addReviewsToDB(!0,function(){alert("Unfortunately, the connection is lost. Therefore, the submitted review will be sent to the server once the connection is re-established."),window.location.href=`/restaurant.html?id=${rest_id}`})});var addReviewsToDB=function(offlineFlag,callback){DBHelper.restaurantDBPromise.then(function(db){if(db)return db.transaction("restaurants","readwrite").objectStore("restaurants").get(rest_id)}).then(function(val){var temp=val;DBHelper.restaurantDBPromise.then(function(db){var tx=db.transaction("restaurants","readwrite"),store=tx.objectStore("restaurants");return temp.reviews||(temp.reviews=[]),item.offline=offlineFlag,temp.reviews.push(item),store.put(temp),tx.complete}).then(function(){callback()})})}},li.appendChild(liName),li.appendChild(liRestId),li.appendChild(liRating),li.appendChild(liComments),li.appendChild(liSubmit),form.appendChild(li),container.appendChild(form)}),createReviewHTML=(review=>{const li=document.createElement("li"),name=document.createElement("p");if(name.innerHTML=review.name,li.appendChild(name),review.date){const date=document.createElement("p");date.innerHTML=review.date,li.appendChild(date)}const rating=document.createElement("p");rating.innerHTML=`Rating: ${review.rating}`,li.appendChild(rating);const comments=document.createElement("p");return comments.innerHTML=review.comments,li.appendChild(comments),li}),fillBreadcrumb=((restaurant=self.restaurant)=>{const breadcrumb=document.getElementById("breadcrumb"),li=document.createElement("li"),a=document.createElement("a");a.href=window.location.href,a.setAttribute("aria-current","page"),a.innerHTML=restaurant.name,li.appendChild(a),breadcrumb.appendChild(li)}),getParameterByName=((name,url)=>{url||(url=window.location.href),name=name.replace(/[\[\]]/g,"\\$&");const results=new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`).exec(url);return results?results[2]?decodeURIComponent(results[2].replace(/\+/g," ")):"":null});